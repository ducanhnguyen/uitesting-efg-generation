package studentmanagement;

import com.alee.laf.WebLookAndFeel;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import utils.Utils;

/**
 *
 * @author ducanhnguyen
 */
public class version1 extends javax.swing.JFrame {

    /**
     * Singleton pattern
     */
    private static version1 instance = null;

    public static final long serialVersionUID = 1L;
    public static int COLUMN_LOWER = 2, COLUMN_UPPER = 3;

    public static int NUMBER_LOAD_MENU = 0;

    public static version1 getInstance() throws Exception {
        if (version1.instance == null) {
            version1.instance = new version1();
        }
        return version1.instance;
    }

    /**
     * Creates new form ManagementWindow
     */
    public version1() {
        try {
            UIManager.setLookAndFeel(new WebLookAndFeel());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(version1.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();

        Utils.setCenter(this);

        // Load data
        new DataInitilization();
        loadDataToStudentTable();
        loadDataToClassTable();
        loadDataToCourseTable();
        // Other configuration
        btnRemove.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jspClasses = new javax.swing.JScrollPane();
        jtbClasses = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jspStudents = new javax.swing.JScrollPane();
        jtbStudents = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbCourses = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jtbClasses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.k", "Class", "Num of students"
            }
        ) );
        jtbClasses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbClassesMouseClicked(evt);
            }
        });
        jspClasses.setViewportView(jtbClasses);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspClasses, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspClasses, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Classes", jPanel2);

        jtbStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Name", "Grade"
            }
        ) );
        jtbStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbStudentsMouseClicked(evt);
            }
        });
        jspStudents.setViewportView(jtbStudents);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspStudents, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jspStudents, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("List of students", jPanel1);

        jtbCourses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.k", "Courses", "Description"
            }
        ) );
        jtbCourses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbCoursesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbCourses);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Courses", jPanel3);

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/studentmanagement/add.png"))); // NOI18N
        btnAdd.setText("Add New");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/studentmanagement/remove.png"))); // NOI18N
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRemove)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnRemove))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jMenuItem1.setText("Export to excel");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(482, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(372, 372, 372)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 36, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        jtbClasses.clearSelection();
        jtbStudents.clearSelection();
        jtbCourses.clearSelection();
        btnRemove.setEnabled(false);
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(this, "Do you want to delete?", "Delete", JOptionPane.YES_NO_OPTION);
        if (dialogResult == 0) {
            switch (jTabbedPane1.getSelectedIndex()) {
                case STUDENT_TAB_INDEX:
                    int selectedStudentIndex = jtbStudents.getSelectedRow();
                    DataInitilization.students.remove(selectedStudentIndex);
                    removeAllFromStudentTable();
                    loadDataToStudentTable();
                    break;

                case CLASS_TAB_INDEX:
                    int selectedClassIndex = jtbClasses.getSelectedRow();
                    DataInitilization.classes.remove(selectedClassIndex);
                    removeAllFromClassTable();
                    loadDataToClassTable();
                    break;

                case COURSE_TAB_INDEX:
                    int selectedCourseIndex = jtbCourses.getSelectedRow();
                    DataInitilization.courses.remove(selectedCourseIndex);
                    removeAllFromCourseTable();
                    loadDataToCourseTable();
                    break;
            }
            btnRemove.setEnabled(false);
        } else {
        }

    }//GEN-LAST:event_btnRemoveActionPerformed

    private void jtbStudentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbStudentsMouseClicked
        btnRemove.setEnabled(true);
    }//GEN-LAST:event_jtbStudentsMouseClicked

    private void jtbClassesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbClassesMouseClicked
       
    }//GEN-LAST:event_jtbClassesMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        jtbClasses.clearSelection();
        jtbStudents.clearSelection();
        jtbCourses.clearSelection();
        btnRemove.setEnabled(false);

        switch (jTabbedPane1.getSelectedIndex()) {
            case STUDENT_TAB_INDEX: {
                SwingWorker worker = new SwingWorker() {
                    @Override
                    protected Object doInBackground() throws Exception {
                        AddNewStudentWindow w = new AddNewStudentWindow();

                        while (w.isVisible()) {
                            Thread.sleep(50);
                        }
                        return null;
                    }

                    @Override
                    protected void done() {
                        removeAllFromStudentTable();
                        loadDataToStudentTable();
                    }

                };
                worker.execute();
                break;
            }
            case CLASS_TAB_INDEX: {
                SwingWorker worker = new SwingWorker() {
                    @Override
                    protected Object doInBackground() throws Exception {
                        AddNewClassWindow w = new AddNewClassWindow();

                        while (w.isVisible()) {
                            Thread.sleep(50);
                        }
                        return null;
                    }

                    @Override
                    protected void done() {
                        removeAllFromClassTable();
                        loadDataToClassTable();
                    }

                };
                worker.execute();
                break;
            }

            case COURSE_TAB_INDEX: {
                SwingWorker worker = new SwingWorker() {
                    @Override
                    protected Object doInBackground() throws Exception {
                        AddNewCourseWindow w = new AddNewCourseWindow();

                        while (w.isVisible()) {
                            Thread.sleep(50);
                        }
                        return null;
                    }

                    @Override
                    protected void done() {
                        removeAllFromCourseTable();
                        loadDataToCourseTable();
                    }

                };
                worker.execute();
                break;
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void jtbCoursesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbCoursesMouseClicked
        btnRemove.setEnabled(true);
    }//GEN-LAST:event_jtbCoursesMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        String ObjButtons[] = {"Yes", "No"};
        int PromptResult = JOptionPane.showOptionDialog(null, "Are you sure you want to exit?", "Exit", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, ObjButtons, ObjButtons[1]);
        if (PromptResult == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(version1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(version1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(version1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(version1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                WebLookAndFeel.install();
                new version1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JScrollPane jspClasses;
    private javax.swing.JScrollPane jspStudents;
    private javax.swing.JTable jtbClasses;
    private javax.swing.JTable jtbCourses;
    private javax.swing.JTable jtbStudents;
    // End of variables declaration//GEN-END:variables
    final int CLASS_TAB_INDEX = 0;
    final int STUDENT_TAB_INDEX = 1;
    final int COURSE_TAB_INDEX = 2;

    private void loadDataToStudentTable() {
        DefaultTableModel model = (DefaultTableModel) jtbStudents.getModel();
        for (int i = 0; i <= DataInitilization.students.size() - 1; i++) {
            Student student = DataInitilization.students.get(i);
            model.addRow(new Object[]{student.getStudentCode(), student.getName(), student.getGrade()});
        }
    }

    private void loadDataToClassTable() {
        DefaultTableModel model = (DefaultTableModel) jtbClasses.getModel();
        for (int i = 0; i <= DataInitilization.classes.size() - 1; i++) {
            Class classItem = DataInitilization.classes.get(i);
            model.addRow(new Object[]{i, classItem.getName(), classItem.getNumStudent()});
        }
    }

    private void loadDataToCourseTable() {
        DefaultTableModel model = (DefaultTableModel) jtbCourses.getModel();
        for (int i = 0; i <= DataInitilization.courses.size() - 1; i++) {
            Course courseItem = DataInitilization.courses.get(i);
            model.addRow(new Object[]{i, courseItem.getName(), courseItem.getDescription()});
        }
    }

    private void removeAllFromStudentTable() {
        ((DefaultTableModel) jtbStudents.getModel()).setRowCount(0);
    }

    private void removeAllFromCourseTable() {
        ((DefaultTableModel) jtbCourses.getModel()).setRowCount(0);
    }

    private void removeAllFromClassTable() {
        ((DefaultTableModel) jtbClasses.getModel()).setRowCount(0);
    }
}
