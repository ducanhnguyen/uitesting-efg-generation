package view;

import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

import studentmanagement.AddNewClassWindow;
import studentmanagement.AddNewStudentWindow;
import studentmanagement.Class;
import studentmanagement.DataInitilization;
import studentmanagement.Student;
import utils.Utils;

/**
 *
 * @author ducanhnguyen
 */
public class GUIVIEW extends javax.swing.JFrame {

    /**
     * Creates new form ManagementWindow
     */
    public GUIVIEW() {
        Utils.setWindowLayout();
        initComponents();
        this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        Utils.setCenter(this);

        // Load data
        new DataInitilization();
        loadDataToStudentTable();
        loadDataToClassTable();

        // Other configuration
        btnRemove.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jspStudents = new javax.swing.JScrollPane();
        jtbStudents = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jspClasses = new javax.swing.JScrollPane();
        jtbClasses = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jtbStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.k", "Student code", "Name"
            }
        ));
        jtbStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbStudentsMouseClicked(evt);
            }
        });
        jspStudents.setViewportView(jtbStudents);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspStudents, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jspStudents, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Students", jPanel1);

        jtbClasses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.k", "Class", "Num of students"
            }
        ) );
        jtbClasses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbClassesMouseClicked(evt);
            }
        });
        jspClasses.setViewportView(jtbClasses);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspClasses, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspClasses, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Classes", jPanel2);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addGap(18, 18, 18)
                .addComponent(btnRemove)
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnRemove))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        jtbClasses.clearSelection();
        jtbStudents.clearSelection();
        btnRemove.setEnabled(false);
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        switch (jTabbedPane1.getSelectedIndex()) {
            case STUDENT_TAB_INDEX:
                int selectedStudentIndex = jtbStudents.getSelectedRow();
                DataInitilization.students.remove(selectedStudentIndex);
                removeAllFromStudentTable();
                loadDataToStudentTable();
                break;

            case CLASS_TAB_INDEX:
                int selectedClassIndex = jtbClasses.getSelectedRow();
                DataInitilization.classes.remove(selectedClassIndex);
                removeAllFromClassTable();
                loadDataToClassTable();
                break;
        }
        btnRemove.setEnabled(false);
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void jtbStudentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbStudentsMouseClicked
        btnRemove.setEnabled(true);
    }//GEN-LAST:event_jtbStudentsMouseClicked

    private void jtbClassesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbClassesMouseClicked
        btnRemove.setEnabled(true);
    }//GEN-LAST:event_jtbClassesMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        jtbClasses.clearSelection();
        jtbStudents.clearSelection();
        btnRemove.setEnabled(false);

        switch (jTabbedPane1.getSelectedIndex()) {
            case STUDENT_TAB_INDEX: {
                SwingWorker worker = new SwingWorker() {
                    @Override
                    protected Object doInBackground() throws Exception {
                        AddNewStudentWindow w = new AddNewStudentWindow();

                        while (w.isVisible()) {
                            Thread.sleep(50);
                        }
                        return null;
                    }

                    @Override
                    protected void done() {
                        removeAllFromStudentTable();
                        loadDataToStudentTable();
                    }

                };
                worker.execute();
                break;
            }
            case CLASS_TAB_INDEX: {
                SwingWorker worker = new SwingWorker() {
                    @Override
                    protected Object doInBackground() throws Exception {
                        AddNewClassWindow w = new AddNewClassWindow();

                        while (w.isVisible()) {
                            Thread.sleep(50);
                        }
                        return null;
                    }

                    @Override
                    protected void done() {
                        removeAllFromClassTable();
                        loadDataToClassTable();
                    }

                };
                worker.execute();
                break;
            }
        }


    }//GEN-LAST:event_btnAddActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        String ObjButtons[] = {"Yes", "No"};
        int PromptResult = JOptionPane.showOptionDialog(null, "Are you sure you want to exit?", "Exit", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, ObjButtons, ObjButtons[1]);
        if (PromptResult == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JScrollPane jspClasses;
    private javax.swing.JScrollPane jspStudents;
    private javax.swing.JTable jtbClasses;
    private javax.swing.JTable jtbStudents;
    // End of variables declaration//GEN-END:variables
    final int STUDENT_TAB_INDEX = 0;
    final int CLASS_TAB_INDEX = 1;
    private static Object lock = new Object();

    private void loadDataToStudentTable() {
        DefaultTableModel model = (DefaultTableModel) jtbStudents.getModel();
        for (int i = 0; i <= DataInitilization.students.size() - 1; i++) {
            Student student = DataInitilization.students.get(i);
            model.addRow(new Object[]{i, student.getStudentCode(), student.getName()});
        }
    }

    private void loadDataToClassTable() {
        DefaultTableModel model = (DefaultTableModel) jtbClasses.getModel();
        for (int i = 0; i <= DataInitilization.classes.size() - 1; i++) {
            Class classItem = DataInitilization.classes.get(i);
            model.addRow(new Object[]{i, classItem.getName(), classItem.getNumStudent()});
        }
    }

    private void removeAllFromStudentTable() {
        ((DefaultTableModel) jtbStudents.getModel()).setRowCount(0);
    }

    private void removeAllFromClassTable() {
        ((DefaultTableModel) jtbClasses.getModel()).setRowCount(0);
    }
}
